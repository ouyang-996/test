// Code generated by protoc-gen-go. DO NOT EDIT.
// source: run.proto

package run

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type Runrequest struct {
	Tag                  string   `protobuf:"bytes,1,opt,name=tag,proto3" json:"tag,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Runrequest) Reset()         { *m = Runrequest{} }
func (m *Runrequest) String() string { return proto.CompactTextString(m) }
func (*Runrequest) ProtoMessage()    {}
func (*Runrequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_e3419bc3417bf873, []int{0}
}

func (m *Runrequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Runrequest.Unmarshal(m, b)
}
func (m *Runrequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Runrequest.Marshal(b, m, deterministic)
}
func (m *Runrequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Runrequest.Merge(m, src)
}
func (m *Runrequest) XXX_Size() int {
	return xxx_messageInfo_Runrequest.Size(m)
}
func (m *Runrequest) XXX_DiscardUnknown() {
	xxx_messageInfo_Runrequest.DiscardUnknown(m)
}

var xxx_messageInfo_Runrequest proto.InternalMessageInfo

func (m *Runrequest) GetTag() string {
	if m != nil {
		return m.Tag
	}
	return ""
}

type Runresponse struct {
	Msg                  string   `protobuf:"bytes,1,opt,name=msg,proto3" json:"msg,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Runresponse) Reset()         { *m = Runresponse{} }
func (m *Runresponse) String() string { return proto.CompactTextString(m) }
func (*Runresponse) ProtoMessage()    {}
func (*Runresponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_e3419bc3417bf873, []int{1}
}

func (m *Runresponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Runresponse.Unmarshal(m, b)
}
func (m *Runresponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Runresponse.Marshal(b, m, deterministic)
}
func (m *Runresponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Runresponse.Merge(m, src)
}
func (m *Runresponse) XXX_Size() int {
	return xxx_messageInfo_Runresponse.Size(m)
}
func (m *Runresponse) XXX_DiscardUnknown() {
	xxx_messageInfo_Runresponse.DiscardUnknown(m)
}

var xxx_messageInfo_Runresponse proto.InternalMessageInfo

func (m *Runresponse) GetMsg() string {
	if m != nil {
		return m.Msg
	}
	return ""
}

func init() {
	proto.RegisterType((*Runrequest)(nil), "run.Runrequest")
	proto.RegisterType((*Runresponse)(nil), "run.Runresponse")
}

func init() { proto.RegisterFile("run.proto", fileDescriptor_e3419bc3417bf873) }

var fileDescriptor_e3419bc3417bf873 = []byte{
	// 127 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0xe2, 0x2c, 0x2a, 0xcd, 0xd3,
	0x2b, 0x28, 0xca, 0x2f, 0xc9, 0x17, 0x62, 0x2e, 0x2a, 0xcd, 0x53, 0x92, 0xe3, 0xe2, 0x0a, 0x2a,
	0xcd, 0x2b, 0x4a, 0x2d, 0x2c, 0x4d, 0x2d, 0x2e, 0x11, 0x12, 0xe0, 0x62, 0x2e, 0x49, 0x4c, 0x97,
	0x60, 0x54, 0x60, 0xd4, 0xe0, 0x0c, 0x02, 0x31, 0x95, 0xe4, 0xb9, 0xb8, 0xc1, 0xf2, 0xc5, 0x05,
	0xf9, 0x79, 0xc5, 0xa9, 0x20, 0x05, 0xb9, 0xc5, 0x70, 0x05, 0xb9, 0xc5, 0xe9, 0x46, 0xc6, 0x5c,
	0xcc, 0x41, 0xa5, 0x79, 0x42, 0x3a, 0x5c, 0xac, 0xee, 0xf9, 0x45, 0xa5, 0x79, 0x42, 0xfc, 0x7a,
	0x20, 0x1b, 0x10, 0x66, 0x4a, 0x09, 0x20, 0x04, 0x20, 0x86, 0x28, 0x31, 0x24, 0xb1, 0x81, 0x5d,
	0x60, 0x0c, 0x08, 0x00, 0x00, 0xff, 0xff, 0xc7, 0xe0, 0x29, 0x28, 0x8e, 0x00, 0x00, 0x00,
}
